comment(OSQ_daten$BI05_25) = "BIDS2.2: Other, specify"
comment(OSQ_daten$BI05_25a) = "BIDS2.2: Other, specify (offene Eingabe)"
comment(OSQ_daten$BI05_26) = "BIDS2.2: I have not used any converter yet."
comment(OSQ_daten$BI06_01) = "BIDS2.3:  ... years"
comment(OSQ_daten$BI07) = "BIDS2.4"
comment(OSQ_daten$BI08) = "BIDS2.5: Ausweichoption (negativ) oder Anzahl ausgewÃ¤hlter Optionen"
comment(OSQ_daten$BI08_01) = "BIDS2.5: MRIQC"
comment(OSQ_daten$BI08_02) = "BIDS2.5: QAP"
comment(OSQ_daten$BI08_03) = "BIDS2.5: Automatic Analysis"
comment(OSQ_daten$BI08_04) = "BIDS2.5: BIDSHandler"
comment(OSQ_daten$BI08_05) = "BIDS2.5: Brainstorm"
comment(OSQ_daten$BI08_06) = "BIDS2.5: C-PAC"
comment(OSQ_daten$BI08_07) = "BIDS2.5: FMRIPREP"
comment(OSQ_daten$BI08_08) = "BIDS2.5: OpenNeuro"
comment(OSQ_daten$BI08_09) = "BIDS2.5: PyBIDS"
comment(OSQ_daten$BI08_10) = "BIDS2.5: bids-matlab"
comment(OSQ_daten$BI08_11) = "BIDS2.5: Other, specify"
comment(OSQ_daten$BI08_11a) = "BIDS2.5: Other, specify (offene Eingabe)"
comment(OSQ_daten$BI08_12) = "BIDS2.5: I have not used any of the above tools."
comment(OSQ_daten$BI09) = "BIDS2.1b: Ausweichoption (negativ) oder Anzahl ausgewÃ¤hlter Optionen"
comment(OSQ_daten$BI09_01) = "BIDS2.1b: I use a different standard format than BIDS. specify"
comment(OSQ_daten$BI09_01a) = "BIDS2.1b: I use a different standard format than BIDS. specify (offene Eingabe)"
comment(OSQ_daten$BI09_02) = "BIDS2.1b: Did not know about it before."
comment(OSQ_daten$BI09_03) = "BIDS2.1b: Had no time to learn more about it."
comment(OSQ_daten$BI09_04) = "BIDS2.1b: Had no time to implement it in my lab."
comment(OSQ_daten$BI09_05) = "BIDS2.1b: Currently implementing it."
comment(OSQ_daten$BI09_06) = "BIDS2.1b: Lacking technical expertise to get BIDS conversion running."
comment(OSQ_daten$BI09_07) = "BIDS2.1b: Not relevant for me and my lab."
comment(OSQ_daten$BI09_08) = "BIDS2.1b: Other, specify"
comment(OSQ_daten$BI09_08a) = "BIDS2.1b: Other, specify (offene Eingabe)"
comment(OSQ_daten$BI10) = "BIDS3"
comment(OSQ_daten$BI11) = "BIDS3.1"
comment(OSQ_daten$PR01) = "PRE1: Ausweichoption (negativ) oder Anzahl ausgewÃ¤hlter Optionen"
comment(OSQ_daten$PR01_01) = "PRE1: Registered report in a scientific journal"
comment(OSQ_daten$PR01_02) = "PRE1: Preregistration with Open Science Framework (OSF)"
comment(OSQ_daten$PR01_03) = "PRE1: Preregistration with ClinicalTrials.gov"
comment(OSQ_daten$PR01_04) = "PRE1: Preregistration with AsPredicted"
comment(OSQ_daten$PR01_05) = "PRE1: Other preregistration platform, specify"
comment(OSQ_daten$PR01_05a) = "PRE1: Other preregistration platform, specify (offene Eingabe)"
comment(OSQ_daten$PR01_06) = "PRE1: I have never preregistered a study."
comment(OSQ_daten$PR03) = "PRE2"
comment(OSQ_daten$PR07_02) = "PRE3: Preparing a preregistration is too time consuming for me."
comment(OSQ_daten$PR07_03) = "PRE3: The analyses I do are too complex to preregister."
comment(OSQ_daten$PR07_04) = "PRE3: I have never learned to preregister a project."
comment(OSQ_daten$PR07_05) = "PRE3: There is not sufficient reward for preregistration."
comment(OSQ_daten$PR07_06) = "PRE3: I have never thought about preregistering a project."
comment(OSQ_daten$PR07_07) = "PRE3: I know too little about suitable preregistration platforms."
comment(OSQ_daten$PR07_08) = "PRE3: I am afraid that my preregistered hypotheses may turn out false."
comment(OSQ_daten$PR07_09) = "PRE3: I am afraid that my preregistered methods may turn out suboptimal or inadequate."
comment(OSQ_daten$PR07_10) = "PRE3: My boss does not support preregistration."
comment(OSQ_daten$PR07_01) = "PRE3: It is necessary to register studies with an explorative research question."
comment(OSQ_daten$DS04) = "DS1"
comment(OSQ_daten$DS09) = "DS2"
comment(OSQ_daten$DS10) = "DS3"
comment(OSQ_daten$DS11) = "DS4: Ausweichoption (negativ) oder Anzahl ausgewÃ¤hlter Optionen"
comment(OSQ_daten$DS11_01) = "DS4: My Institutional Review Board does not allow me to share my data."
comment(OSQ_daten$DS11_02) = "DS4: The consent form states that data will not be shared."
comment(OSQ_daten$DS11_03) = "DS4: Anonymity cannot be guaranteed if the data is shared."
comment(OSQ_daten$DS11_04) = "DS4: Stakeholder (e. g. company or institution) interests prohibit data from being shared."
comment(OSQ_daten$DS11_05) = "DS4: My funder/advisor/boss does not allow me to share my data."
comment(OSQ_daten$DS11_06) = "DS4: Other, specify"
comment(OSQ_daten$DS11_06a) = "DS4: Other, specify (offene Eingabe)"
comment(OSQ_daten$DS13_01) = "DS5: Preparing data to make it suitable for online sharing is too time consuming for me."
comment(OSQ_daten$DS13_02) = "DS5: I lack funding to make data suitable for online sharing."
comment(OSQ_daten$DS13_03) = "DS5: My data set is too big to share."
comment(OSQ_daten$DS13_04) = "DS5: My data set is too complex to share."
comment(OSQ_daten$DS13_05) = "DS5: I have never learned to share my research data online."
comment(OSQ_daten$DS13_06) = "DS5: I have never thought about sharing my research data online."
comment(OSQ_daten$DS13_07) = "DS5: I know too little about suitable repositories."
comment(OSQ_daten$DS13_08) = "DS5: My boss does not support online data sharing."
comment(OSQ_daten$DS13_09) = "DS5: I am afraid that I will not get proper recognition for sharing my data."
comment(OSQ_daten$DS13_10) = "DS5: I am afraid that other researchers will perform alternative analyses on my data and argue that my conclusions are invalid."
comment(OSQ_daten$DS13_11) = "DS5: I am afraid that other researchers will discover errors in my data."
comment(OSQ_daten$DS13_12) = "DS5: I am afraid of being scooped: that other researchers may publish results from my data set before I can."
comment(OSQ_daten$DS02_01) = "DS6: I prefer to share via an online repository with unrestricted open access."
comment(OSQ_daten$DS02_02) = "DS6: I prefer to share via a managed online repository with restricted access."
comment(OSQ_daten$DS02_03) = "DS6: I prefer to share upon personal request, e.g. via direct data transfer from my institution\'s server to the server of the recipient."
comment(OSQ_daten$DS02_04) = "DS6: I prefer to share under a data sharing agreement to be signed by the recipient."
comment(OSQ_daten$DS02_05) = "DS6: Researchers with reasonable interest can work with my raw data, but this work needs to be done on the server of my home institution."
comment(OSQ_daten$DS02_06) = "DS6: I prefer not to give other researchers access to my raw data."
comment(OSQ_daten$NA01) = "NAS1"
comment(OSQ_daten$NA01_04) = "NAS1: Other, specify"
comment(OSQ_daten$NA02) = "NAS2"
comment(OSQ_daten$NA02_06) = "NAS2: Other, specify"
comment(OSQ_daten$NA03) = "NAS3"
comment(OSQ_daten$NA04) = "NAS4"
comment(OSQ_daten$NA05) = "NAS4.1: Ausweichoption (negativ) oder Anzahl ausgewÃ¤hlter Optionen"
comment(OSQ_daten$NA05_01) = "NAS4.1: SPM"
comment(OSQ_daten$NA05_02) = "NAS4.1: FSL"
comment(OSQ_daten$NA05_03) = "NAS4.1: AFNI"
comment(OSQ_daten$NA05_04) = "NAS4.1: BrainVoyager"
comment(OSQ_daten$NA05_05) = "NAS4.1: ANTs"
comment(OSQ_daten$NA05_06) = "NAS4.1: Other, specify"
comment(OSQ_daten$NA05_06a) = "NAS4.1: Other, specify (offene Eingabe)"
comment(OSQ_daten$NA06) = "NAS4.2"
comment(OSQ_daten$NA07) = "NAS5"
comment(OSQ_daten$SP01) = "SPS1: Ausweichoption (negativ) oder Anzahl ausgewÃ¤hlter Optionen"
comment(OSQ_daten$SP01_01) = "SPS1: Presentation"
comment(OSQ_daten$SP01_02) = "SPS1: E-prime"
comment(OSQ_daten$SP01_03) = "SPS1: Psychtoolbox"
comment(OSQ_daten$SP01_04) = "SPS1: Open Sesame"
comment(OSQ_daten$SP01_05) = "SPS1: PsychoPy"
comment(OSQ_daten$SP01_06) = "SPS1: Other, specify"
comment(OSQ_daten$SP01_06a) = "SPS1: Other, specify (offene Eingabe)"
comment(OSQ_daten$SP01_07) = "SPS1: I never present stimuli."
comment(OSQ_daten$PD01_01) = "PD1:  ... years"
comment(OSQ_daten$PD02) = "PD2"
comment(OSQ_daten$PD10) = "PD3"
comment(OSQ_daten$PD04) = "PD5"
comment(OSQ_daten$PD04_07) = "PD5: Other, specify"
comment(OSQ_daten$PD05_01) = "PD6:  ... years"
comment(OSQ_daten$PD06) = "PD7"
comment(OSQ_daten$PD06_07) = "PD7: Medicine, other discipline, specify"
comment(OSQ_daten$PD06_08) = "PD7: Psychology, other discipline, specify"
comment(OSQ_daten$PD07) = "PD8"
comment(OSQ_daten$PD07_06) = "PD8: Other, specify"
comment(OSQ_daten$PD08) = "PD9"
comment(OSQ_daten$PD09) = "PD10: Ausweichoption (negativ) oder Anzahl ausgewÃ¤hlter Optionen"
comment(OSQ_daten$PD09_01) = "PD10: healthy participant data."
comment(OSQ_daten$PD09_02) = "PD10: data from individuals affected with a mental disorder."
comment(OSQ_daten$PD09_03) = "PD10: data from individuals affected with a physical disorder."
comment(OSQ_daten$PD12_01) = "PD3.1: [01]"
comment(OSQ_daten$FB01_01) = "FB1: [01]"
comment(OSQ_daten$TIME001) = "Verweildauer Seite 1"
comment(OSQ_daten$TIME002) = "Verweildauer Seite 2"
comment(OSQ_daten$TIME003) = "Verweildauer Seite 3"
comment(OSQ_daten$TIME004) = "Verweildauer Seite 4"
comment(OSQ_daten$TIME005) = "Verweildauer Seite 5"
comment(OSQ_daten$TIME006) = "Verweildauer Seite 6"
comment(OSQ_daten$TIME007) = "Verweildauer Seite 7"
comment(OSQ_daten$TIME008) = "Verweildauer Seite 8"
comment(OSQ_daten$TIME009) = "Verweildauer Seite 9"
comment(OSQ_daten$TIME010) = "Verweildauer Seite 10"
comment(OSQ_daten$TIME011) = "Verweildauer Seite 11"
comment(OSQ_daten$TIME012) = "Verweildauer Seite 12"
comment(OSQ_daten$TIME013) = "Verweildauer Seite 13"
comment(OSQ_daten$TIME014) = "Verweildauer Seite 14"
comment(OSQ_daten$TIME015) = "Verweildauer Seite 15"
comment(OSQ_daten$TIME016) = "Verweildauer Seite 16"
comment(OSQ_daten$TIME017) = "Verweildauer Seite 17"
comment(OSQ_daten$TIME018) = "Verweildauer Seite 18"
comment(OSQ_daten$TIME019) = "Verweildauer Seite 19"
comment(OSQ_daten$TIME020) = "Verweildauer Seite 20"
comment(OSQ_daten$TIME_SUM) = "Verweildauer gesamt (ohne AusreiÃer)"
comment(OSQ_daten$MAILSENT) = "Versandzeitpunkt der Einladungsmail (nur fÃ¼r nicht-anonyme Adressaten)"
comment(OSQ_daten$LASTDATA) = "Zeitpunkt als der Datensatz das letzte mal geÃ¤ndert wurde"
comment(OSQ_daten$FINISHED) = "Wurde die Befragung abgeschlossen (letzte Seite erreicht)?"
comment(OSQ_daten$Q_VIEWER) = "Hat der Teilnehmer den Fragebogen nur angesehen, ohne die Pflichtfragen zu beantworten?"
comment(OSQ_daten$LASTPAGE) = "Seite, die der Teilnehmer zuletzt bearbeitet hat"
comment(OSQ_daten$MAXPAGE) = "Letzte Seite, die im Fragebogen bearbeitet wurde"
comment(OSQ_daten$MISSING) = "Anteil fehlender Antworten in Prozent"
comment(OSQ_daten$MISSREL) = "Anteil fehlender Antworten (gewichtet nach Relevanz)"
comment(OSQ_daten$TIME_RSI) = "Maluspunkte fÃ¼r schnelles AusfÃ¼llen"
comment(OSQ_daten$DEG_TIME) = "Maluspunkte fÃ¼r schnelles AusfÃ¼llen"
# Assure that the comments are retained in subsets
as.data.frame.avector = as.data.frame.vector
`[.avector` <- function(x,i,...) {
r <- NextMethod("[")
mostattributes(r) <- attributes(x)
r
}
OSQ_daten_tmp = data.frame(
lapply(OSQ_daten, function(x) {
structure( x, class = c("avector", class(x) ) )
} )
)
mostattributes(OSQ_daten_tmp) = attributes(OSQ_daten)
OSQ_daten = OSQ_daten_tmp
rm(OSQ_daten_tmp)
library(tidyverse)
library(naniar)
library(ggplot2)
library(ggmosaic)
#Constructing binary variables from Personal Data questions to compare items on
BI07<- as.data.frame(OSQ_daten$BI07)
BI07<-replace_with_na(BI07, replace = list('OSQ_daten$BI07' = -9))
#Research experience
researchexp<- cut(OSQ_daten$PD05_01, c(0,16, 55), labels=c(1:2)) #-> (cut off median= 16 years)
#researchexp<-as.data.frame(researchexp)                         #-> zum kontrollieren
#researchexp<- cbind(OSQ_daten$PD05_01, researchexp)
#table(researchexp$researchexp)
#Primary affiliation with medical faculty
PD08<-OSQ_daten$PD08
PD08<-as.data.frame(PD08)
University <- PD08 %>%                                           #-> collapse 6 factors in to 2 (University hospital/medical faculty vs University psychology/other faculty)
mutate(type = as.factor(case_when(
PD08 %in% c(1) ~ 1,                                          # 1 = With university hospital/medical faculty
PD08 %in% c(2, 3) ~ 2,                                       # 2 = With university/psychology faculty or similar 3 = With university/other faculty
PD08 %in% c(4, 5, 6) ~ 3                                     # 4 = With industry 5 = Other 6 = With governmental institution
)))
University<-University%>%                                        # replace level 3 with missing values
replace_with_na(replace = list(type = c(3)))
University<-droplevels(University$type)                          # drop unused level
#table(University)                                               # zum kontrollieren
#EU residency
EU<-OSQ_daten$PD10                                               # 1 = in the EU. 2 = outside of the EU.
EU<-as.factor(EU)                                                # create factor of question regarding country of origin
#table(EU)                                                       # zum kontrollieren
#Current position professor/associate professor or not
PD07<-OSQ_daten$PD07
PD07<-as.data.frame(PD07)
Professor <- PD07 %>%                                            # collapse 10 levels into 2
mutate(type = as.factor(case_when(
PD07 %in% c(5, 10) ~ 1,                                      # 5 = Full Professor 10 = Associate Professor/Reader/Lecturer
PD07 %in% c(1, 2, 7, 8, 3, 6, 9) ~ 2,                        # 1 = Research Assistant 2 = PhD Student 7 = Technical Assistant 8 = Lab Manager 3 = Post-Doc (1-3 years) 9 = Asisstant Professor/Post-Doc (4 years or longer) PD07_06 Other
PD07 %in% c(-9) ~ 3
)))
Professor<- as.factor(Professor$type)                            # create factor
#table(Professor)                                                # zum kontrollieren
##Construction of Factors
#Factor1 Training experience preregistration (DS13_05, DS13_06, DS13_07, DS13_08, !PR07_02!, PR07_04, !PR07_05!, PR07_06, PR07_07, PR07_10)
Training_prereg<-as.data.frame(cbind(OSQ_daten$PR07_02,
OSQ_daten$PR07_04,
OSQ_daten$PR07_05,
OSQ_daten$PR07_06,
OSQ_daten$PR07_07))
#recode factor training
cols = c("V1", "V2", "V3", "V4", "V5")
Training_prereg[ ,cols] = 8 - Training_prereg[ ,cols]
#calculate factor total score
Training_prereg$Training_preregTotal <- rowSums(subset(Training_prereg, select = c(1:5)))              # summing variables to get Total Score for this factor
Training_prereg$Training_preregTotal <- (Training_prereg$Training_preregTotal/5)
#Factor2 [fear of being transparent](DS13_09, DS13_10, DS13_11, DS13_12, PR07_08, PR07_09)
Fear<- as.data.frame(cbind(OSQ_daten$DS13_10,
OSQ_daten$DS13_11,
OSQ_daten$PR07_08,
OSQ_daten$PR07_09))
Fear$FearTotal <- rowSums(subset(Fear, select = c(1:4)))        # summing variables to get Total Score for this factor
Fear$FearTotal <- (Fear$FearTotal/4)
#Factor3 [complexity/burden of making data accessible] (DS13_01, DS13_02, DS13_03, DS13_04, PR07_03)
Complexity<- as.data.frame(cbind(OSQ_daten$DS13_03,
OSQ_daten$DS13_04,
OSQ_daten$PR07_03))
#OSQ_daten$PR07_02,            #suits theoretically, doesn't load high on factor
#OSQ_daten$PR07_05))           #suits theoretically, doesn't load high on factor
Complexity$ComplexityTotal <- rowSums(subset(Complexity, select = c(1:3)))
Complexity$ComplexityTotal <- (Complexity$ComplexityTotal/3)
#Factor4 Need for datagovernance (DS02_01, DS02_03, DS02_04, DS02_05)
Control<- as.data.frame(cbind(OSQ_daten$DS02_01,
OSQ_daten$DS02_03,
OSQ_daten$DS02_04,
OSQ_daten$DS02_05))
Control_recoded <- Control %>%
mutate_at(vars(1),
~ifelse(. == 1, 7,
ifelse(. == 2, 6,
ifelse(. == 3, 5,
ifelse(. == 4, 4,
ifelse(. == 5, 3,
ifelse(. == 6, 2,
ifelse(. == 7, 1, .))))))))                             # recode reversely coded item
Control_recoded$ControlTotal <- rowSums(subset(Control_recoded, select = c(1:4)))   # summing variables to get Total Score for this factor
Control_recoded$ControlTotal <- (Control_recoded$ControlTotal/4)
#Factor 5 Restrictive environment
Boss<-as.data.frame(cbind(OSQ_daten$DS13_08,
OSQ_daten$PR07_10))
Boss$BossTotal <- rowSums(subset(Boss, select = c(1:2)))              # summing variables to get Total Score for this factor
Boss$BossTotal <- (Boss$BossTotal/2)
#Faktor 6 Training experience Datasharing
Training_ds<-as.data.frame(cbind(OSQ_daten$DS13_05,
OSQ_daten$DS13_06,
OSQ_daten$DS13_07))
#recode factor
cols = c("V1", "V2", "V3")
Training_ds[ ,cols] = 8 - Training_ds[ ,cols]
Training_ds$Training_dsTotal <- rowSums(subset(Training_ds, select = c(1:3)))              # summing variables to get Total Score for this factor
Training_ds$Training_dsTotal <- (Training_ds$Training_dsTotal/3)
#Lack of resources for Datasharing
NoResources_DS<- as.data.frame(cbind(OSQ_daten$DS13_01,
OSQ_daten$DS13_02))
NoResources_DS$NoResources_DS_Total <- rowSums((subset(NoResources_DS, select= c(1:2))))
NoResources_DS$NoResources_DS_Total <- (NoResources_DS$NoResources_DS_Total/2)
#Create dataframe for analysis
Follow_up<- as.data.frame(cbind(researchexp,
University,
EU,
Professor))
Follow_up$DS10 <-OSQ_daten$DS10
Follow_up$DS09 <-OSQ_daten$DS09
Follow_up$Training_preregTotal<- Training_prereg$Training_preregTotal
Follow_up$Training_dsTotal<- Training_ds$Training_dsTotal
Follow_up$FearTotal<- Fear$FearTotal
Follow_up$ComplexityTotal<-Complexity$ComplexityTotal
Follow_up$ControlTotal<-Control_recoded$ControlTotal
Follow_up$BossTotal<-Boss$BossTotal
Follow_up$NoResources_DS<-NoResources_DS$NoResources_DS_Total
Follow_up$researchexp<-as.factor(Follow_up$researchexp)
Follow_up$University<- as.factor(Follow_up$University)
Follow_up$Professor<- as.factor(Follow_up$Professor)
Follow_up$EU<- as.factor(Follow_up$EU)
Follow_up$BI07<- OSQ_daten$BI07
Follow_up$DS09<- OSQ_daten$DS09
Follow_up$BI02<- OSQ_daten$BI02
prev_prereg<- subset(OSQ_daten, select = c(79:83, 85))
prev_prereg<-mutate(prev_prereg, prev_prereg = ifelse(PR01_01 | PR01_02 | PR01_03 | PR01_04 | PR01_05 == 'TRUE', "1", "0"))
prev_prereg$prev_prereg<- as.factor(prev_prereg$prev_prereg)
Follow_up$prev_prereg<- prev_prereg$prev_prereg
###################
# CLUSTERANALYSIS #
###################
library(psych)
library(factoextra)
library(psych)
library(clValid)
clusteranalysis<- as.data.frame(cbind(Training_preregTotal=Follow_up$Training_preregTotal,
Training_dsTotal=Follow_up$Training_dsTotal,
FearTotal=Follow_up$FearTotal,
ComplexityTotal=Follow_up$ComplexityTotal,
ControlTotal=Follow_up$ControlTotal,
BossTotal=Follow_up$BossTotal,
NoResources_DS=Follow_up$NoResources_DS))
#determine number of cluster
fviz_nbclust(clusteranalysis, FUN = hcut, method = "wss")          #elbow method
fviz_nbclust(clusteranalysis, FUN = hcut, method = "silhouette")   #silhouette method
#->suggests best number of clusters = 2
#
seeds_df_sc <- as.data.frame(scale(clusteranalysis))
summary(seeds_df_sc)
dist_mat <- dist(seeds_df_sc, method = 'euclidean')
hclust_avg <- hclust(dist_mat, method = 'ward.D2')
plot(hclust_avg)
cut_avg <- cutree(hclust_avg, k = 2)
plot(hclust_avg)
rect.hclust(hclust_avg , k = 2 , border = 2:6)
abline(h = 20 , col = 'red')
suppressPackageStartupMessages(library(dendextend))
avg_dend_obj <- as.dendrogram(hclust_avg)
avg_col_dend <- color_branches(avg_dend_obj, h = 20)
plot(avg_col_dend)
#suppressPackageStartupMessages(library(dplyr)) [NEEDED?]
seeds_df_cl <- mutate(clusteranalysis, cluster = cut_avg)
count(seeds_df_cl,cluster)
library(clValid)
dunn(dist_mat, cut_avg)
#->dunn index= 0,155
###
#Follow up analyses: Cluster charactersitics
clusteranalysis$cluster<- as.factor(cut_avg)
levels(clusteranalysis$cluster)
Follow_up$cluster<- as.factor(cut_avg)
levels(Follow_up$cluster)
#descriptive statistics of factors per cluster
describeBy(clusteranalysis, group = Follow_up$cluster)
#descriptive statistics of BI07, DS09, BI02 per cluster
describeBy(Follow_up$BI07, group = Follow_up$cluster)
describeBy(Follow_up$DS09, group = Follow_up$cluster)
describeBy(Follow_up$BI02, group = Follow_up$cluster)
########################
#Profile plots of clusters based on factors from factoranalysis
library(profileR)
profileplot<-data.frame(TR_reg = c(3.70, 5.03),
TR_ds = c(3.97, 5.93),
Fear = c(3.95, 2.55),
Compl= c( 4.04, 3.00),
Contr= c( 4.41, 3.83),
Boss = c( 3.20, 1.64),
NoResources_DS = c( 5.34, 3.67),
cluster= as.factor(c(1, 2)))
profileplot <- melt(profileplot, id.vars = "cluster")
profileplot(profileplot, person.id= cluster, standardize = FALSE, interval = 7,
by.pattern = TRUE, original.names = TRUE)
ggplot(profileplot) +
scale_y_continuous(limits=c(1,7), breaks=1:7)+
geom_line(aes(variable, value, group = cluster,
color = cluster))
#radarchart of clusters based on factors from factoranalysis
library(fmsb)
radarchart<-data.frame(TR_reg = c(7, 0, 3.70, 5.03),
TR_ds = c(7, 0, 3.97, 5.93),
Fear = c(7, 0, 3.95, 2.55),
Complexity= c(7, 0, 4.04, 3.00),
Control= c(7, 0, 4.41, 3.83),
Boss = c(7, 0, 3.20, 1.64),
NoRes_DS = c(7, 0, 5.34, 3.67),
row.names = c("max", "min", "Cluster1", "Cluster2"))
radarchart(radarchart, seg= 7)
##logistic regression
model0<- glm(cluster~1, data=Follow_up, family=binomial())
model1 <- glm(cluster ~ Follow_up$researchexp+ Follow_up$Professor+Follow_up$EU+ Follow_up$University,family=binomial(),data=Follow_up)
summary(model1)
model1 <- glm(cluster ~ researchexp+ Professor+ EU+ University,family=binomial(),data=Follow_up)
summary(model1)
#-> no significance, Trend for Professor and University
model2 <- glm(cluster ~ Follow_up$researchexp+ Follow_up$Professor+Follow_up$EU+Follow_up$University+ Follow_up$DS10+ Follow_up$DS09+ Follow_up$prev_prereg,family=binomial(link='logit'),data=Follow_up)
summary(model2)
plot(allEffects(model1))
table(Professor)                                                # zum kontrollieren
View(Follow_up)
View(clusteranalysis)
View(profileplot)
#descriptive statistics of factors per cluster
describeBy(clusteranalysis, group = Follow_up$cluster)
#descriptive statistics of factors per cluster
desc.stats<-describeBy(clusteranalysis, group = Follow_up$cluster)
View(desc.stats)
SE<- desc.stats$mean
desc.stats$mean
desc.stats$n
#descriptive statistics of factors per cluster
desc.stats<-as.data.frame(describeBy(clusteranalysis, group = Follow_up$cluster))
desc.stats$1$mean
desc.stats$1..$mean
View(desc.stats)
View(clusteranalysis)
desc.stats<-summary(clusteranalysis, cluster==1)
desc.stats<-summary(clusteranalysis, clusteranalysis$cluster==1)
desc.stats[1]
desc.stats[3]
desc.stats[c(3,5,9)]
View(Fear)
desc.stats[c(1)]
desc.stats2<- desc.stats$1
desc.stats2<-
desc.stats$1
#descriptive statistics of factors per cluster
desc.stats<-describeBy(clusteranalysis, group = Follow_up$cluster)
SD1<- desc.stats$`1`$sd/desc.stats$`1`$mean
SD1
SD2<- desc.stats$`2`$sd/desc.stats$`2`$mean
modelchi<-model2$null.deviance - model2$deviance
SD2
# Comparing the effect of career level on each factor
t.test(Follow_up$TrainingTotal ~ Professor)
View(Follow_up)
# Differences in datasharing for people living inside or outside of the EU
#(1 = in the EU. 2 = outside of the EU.)
t.test(Follow_up$DS09 ~ EU)
# Comparing the effect of career level on each factor
t.test(Follow_up$TrainingTotal ~ Professor)
# Comparing the effect of affiliation with medical faculty on each factor
t.test(Follow_up$TrainingTotal ~ University)
t.test(Follow_up$FearTotal ~ University)
t.test(Follow_up$ComplexityTotal ~ University)
t.test(Follow_up$ControlTotal ~ University)
t.test(Follow_up$FearTotal ~ Professor)
t.test(Follow_up$ComplexityTotal ~ Professor)
t.test(Follow_up$ControlTotal ~ Professor)
ggplot(profileplot) +
scale_y_continuous(limits=c(1,7), breaks=1:7)+
geom_line(aes(variable, value, group = cluster,
color = cluster))
plot(allEffects(model1))
?contrasts
contrasts(data$group)
contrasts(clusteranalysis$cluster)
contrasts(Follow_up$Professor)
contrasts(Follow_up$cluster)
table(Follow_up$Proofessorym Follow_up$cluster)
table(Follow_up$Proßofessor, Follow_up$cluster)
table(Follow_up$Professor, Follow_up$cluster)
?table
table<-table(Follow_up$Professor, Follow_up$cluster)
table(Follow_up$cluster, Follow_up$Professor)
table<-(as.data.frame(table(Follow_up$cluster, Follow_up$Professor))
table<-as.data.frame(table(Follow_up$cluster, Follow_up$Professor))
table<-as.data.frame(table(Follow_up$cluster, Follow_up$Professor))
View(table)
table(Follow_up$University, Follow_up$cluster)
table(Follow_up$University, Follow_up$cluster, responseName= a, b)
table(Follow_up$University, Follow_up$cluster, responseName= University, cluster)
table(Follow_up$University, Follow_up$cluster, responseName)
test<-Follow_up
test$Professor<- c("Prof", "noProf")
levels(test$Professor)<- c("Prof", "noProf")
View(test)
table(test$Professor, test$cluster)
model1 <- glm(cluster ~ test$researchexp+ test$Professor+test$EU+ test$University,family=binomial(),data=test)
plot(allEffects(model1))
View(model1)
model1 <- glm(cluster ~ researchexp+ Professor+EU+ University,family=binomial(),data=test)
summary(model1)
plot(allEffects(model1))
levels(test$cluster)<- c("Cluster1", "Cluster2")
model1 <- glm(cluster ~ researchexp+ Professor+EU+ University,family=binomial(),data=test)
plot(allEffects(model1))
table(test$Professor, test$cluster)
levels(test$University)<- c("Medical", "noMedical")
model1 <- glm(cluster ~ researchexp+ Professor+EU+ University,family=binomial(),data=test)
plot(allEffects(model1))
#descriptive statistics of factors per cluster
desc.stats<-describeBy(clusteranalysis, group = Follow_up$cluster)
desc.stats
SD1<- desc.stats$`1`$sd/desc.stats$`1`$mean
SD1
SD1<- desc.stats$`1`$sd/desc.stats$`1`$n
SD1
SD1<- desc.stats$`1`$sd/(sqrt(desc.stats$`1`$n))
SD1
ggplot(profileplot) +
scale_y_continuous(limits=c(1,7), breaks=1:7)+
geom_line(aes(variable, value, group = cluster,
color = cluster))+
geom_ribbon(aes(ymin=lower, ymax=upper, x=x, fill = "band"), alpha = 0.3)+
#radarchart of clusters based on factors from factoranalysis
library(fmsb)
ggplot(profileplot) +
scale_y_continuous(limits=c(1,7), breaks=1:7)+
geom_line(aes(variable, value, group = cluster,
color = cluster))+
geom_ribbon(aes(ymin=lower, ymax=upper, x=x, fill = "band"), alpha = 0.3)
ggplot(profileplot) +
scale_y_continuous(limits=c(1,7), breaks=1:7)+
geom_line(aes(variable, value, group = cluster,
color = cluster))+
geom_ribbon(data = sim.data, aes(y = mean, ymin = lo, ymax = hi),
alpha = .25)
ggplot(profileplot) +
scale_y_continuous(limits=c(1,7), breaks=1:7)+
geom_line(aes(variable, value, group = cluster,
color = cluster))+
geom_ribbon(data = profileplot, aes(y = mean, ymin = lo, ymax = hi),
alpha = .25)
